{"version":3,"sources":["middleware/logger.js","middleware/index.js","utils/_DATA.js","utils/api.js","actions/questions.js","actions/users.js","reducers/index.js","reducers/questions.js","reducers/users.js","reducers/authedUser.js","actions/shared.js","component/Login.js","component/NewQuestion.js","component/LeaderBoard.js","component/NavBar.js","component/PageNotFound.js","component/QuestionPoll.js","component/QuestionPollList.js","component/App.js","index.js"],"names":["logger","store","next","action","console","group","type","log","returnValue","getState","groupEnd","applyMiddleware","thunk","users","hodiete","id","name","avatarURL","answers","am8ehyc8byjqgar0jgpub9","loxhs1bqm25b708cmbf3g","questions","csmith","vthrdm985a262al8qx3do","xj352vofupe1dqz9emx13r","jorielsaikali","author","timestamp","optionOne","votes","text","optionTwo","_saveQuestion","question","Promise","res","rej","authedUser","formattedQuestion","optionOneText","optionTwoText","Math","random","toString","substring","Date","now","formatQuestion","setTimeout","concat","saveQuestion","saveQuestionAnswer","object","qid","answer","_saveQuestionAnswer","addQuestion","removeQuestion","setAuthedUser","combineReducers","state","qanswer","filter","user","questionId","handleInitialData","dispatch","all","then","receiveUsers","receiveQuestions","handleSaveQuestionUser","catch","e","warn","handleSaveQuestionUserAnswer","questionAnswer","addUserAnswer","removeQuestionAnswer","Login","handleSelectedUser","preventDefault","target","value","toLowerCase","props","Fragment","Container","Jumbotron","className","Form","onSubmit","this","Control","as","map","key","Button","variant","size","block","Component","connect","Object","keys","NewQuestion","isDisabled","handleNewQuestion","history","push","handleInputChange","setState","Card","placeholder","onChange","disabled","LeaderBoard","sort","a","b","total","i","src","avatar","alt","width","height","answeredQuestions","createdQuestions","length","NavBar","handleLogout","Row","Col","bg","Nav","to","onClick","withRouter","PageNotFound","QuestionPoll","handleOptionResult","options","option","floor","userVote","totalVotes","optionOneVotes","optionTwoVotes","picture","style","handlePercentageVote","Check","defaultChecked","label","match","params","question_id","QuestionPollList","isAnswered","handleSortedQuestions","handleClick","buildQuestion","aFunc","authors","unAnsweredQuestions","questionNotAnswered","questionAnswered","ArrQuestion","includes","Set","App","fluid","exact","path","component","render","createStore","reducers","applyMiddleWare","ReactDOM","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.4575801b.chunk.js","sourcesContent":["const logger = (store) => (next) => (action) => {\n  console.group(action.type)\n    console.log('The action: ', action)\n    const returnValue = next(action)\n    console.log('The new state: ', store.getState())\n  console.groupEnd()\n  return returnValue\n}\n\nexport default logger","import thunk from 'redux-thunk'\nimport logger from './logger'\nimport { applyMiddleware } from 'redux'\n\nexport default applyMiddleware(\n  thunk,\n  logger,\n)\n\n","let users = {\n hodiete: {\n  id: \"hodiete\",\n  name: \"Henry Odiete\",\n  avatarURL: \"../../images/snow.jpg\",\n  answers: {\n   \"8xf0y6ziyjabvozdd253nd\": \"optionOne\",\n   \"6ni6ok3ym7mf1p33lnez\": \"optionOne\",\n   am8ehyc8byjqgar0jgpub9: \"optionTwo\",\n   loxhs1bqm25b708cmbf3g: \"optionTwo\",\n  },\n  questions: [\"8xf0y6ziyjabvozdd253nd\", \"am8ehyc8byjqgar0jgpub9\"],\n },\n csmith: {\n  id: \"csmith\",\n  name: \"Colin Smith\",\n  avatarURL: \"../../images/tyler.jpg\",\n  answers: {\n   vthrdm985a262al8qx3do: \"optionOne\",\n   xj352vofupe1dqz9emx13r: \"optionTwo\",\n  },\n  questions: [\"loxhs1bqm25b708cmbf3g\", \"vthrdm985a262al8qx3do\"],\n },\n jorielsaikali: {\n  id: \"jorielsaikali\",\n  name: \"Jori El-Saikali\",\n  avatarURL: \"../../images/leaf.jpg\",\n  answers: {\n   xj352vofupe1dqz9emx13r: \"optionOne\",\n   vthrdm985a262al8qx3do: \"optionTwo\",\n   \"6ni6ok3ym7mf1p33lnez\": \"optionOne\",\n  },\n  questions: [\"6ni6ok3ym7mf1p33lnez\", \"xj352vofupe1dqz9emx13r\"],\n },\n};\n\nlet questions = {\n \"8xf0y6ziyjabvozdd253nd\": {\n  id: \"8xf0y6ziyjabvozdd253nd\",\n  author: \"hodiete\",\n  timestamp: 1467166872634,\n  optionOne: {\n   votes: [\"hodiete\"],\n   text: \"have horrible short term memory\",\n  },\n  optionTwo: {\n   votes: [],\n   text: \"have horrible long term memory\",\n  },\n },\n \"6ni6ok3ym7mf1p33lnez\": {\n  id: \"6ni6ok3ym7mf1p33lnez\",\n  author: \"jorielsaikali\",\n  timestamp: 1468479767190,\n  optionOne: {\n   votes: [\"hodiete\"],\n   text: \"become a superhero\",\n  },\n  optionTwo: {\n   votes: [\"jorielsaikali\"],\n   text: \"become a supervillian\",\n  },\n },\n am8ehyc8byjqgar0jgpub9: {\n  id: \"am8ehyc8byjqgar0jgpub9\",\n  author: \"hodiete\",\n  timestamp: 1488579767190,\n  optionOne: {\n   votes: [],\n   text: \"be telekinetic\",\n  },\n  optionTwo: {\n   votes: [\"hodiete\"],\n   text: \"be telepathic\",\n  },\n },\n loxhs1bqm25b708cmbf3g: {\n  id: \"loxhs1bqm25b708cmbf3g\",\n  author: \"csmith\",\n  timestamp: 1482579767190,\n  optionOne: {\n   votes: [],\n   text: \"be a front-end developer\",\n  },\n  optionTwo: {\n   votes: [\"hodiete\"],\n   text: \"be a back-end developer\",\n  },\n },\n vthrdm985a262al8qx3do: {\n  id: \"vthrdm985a262al8qx3do\",\n  author: \"csmith\",\n  timestamp: 1489579767190,\n  optionOne: {\n   votes: [\"csmith\"],\n   text: \"find $50 yourself\",\n  },\n  optionTwo: {\n   votes: [\"jorielsaikali\"],\n   text: \"have your best friend find $500\",\n  },\n },\n xj352vofupe1dqz9emx13r: {\n  id: \"xj352vofupe1dqz9emx13r\",\n  author: \"jorielsaikali\",\n  timestamp: 1493579767190,\n  optionOne: {\n   votes: [\"jorielsaikali\"],\n   text: \"write JavaScript\",\n  },\n  optionTwo: {\n   votes: [\"csmith\"],\n   text: \"write Swift\",\n  },\n },\n};\n\nfunction generateUID() {\n return (\n  Math.random().toString(36).substring(2, 15) +\n  Math.random().toString(36).substring(2, 15)\n );\n}\n\nexport function _getUsers() {\n return new Promise((res, rej) => {\n  setTimeout(() => res({ ...users }), 1000);\n });\n}\n\nexport function _getQuestions() {\n return new Promise((res, rej) => {\n  setTimeout(() => res({ ...questions }), 1000);\n });\n}\n\nfunction formatQuestion({ optionOneText, optionTwoText, author }) {\n return {\n  id: generateUID(),\n  timestamp: Date.now(),\n  author,\n  optionOne: {\n   votes: [],\n   text: optionOneText,\n  },\n  optionTwo: {\n   votes: [],\n   text: optionTwoText,\n  },\n };\n}\n\nexport function _saveQuestion(question) {\n return new Promise((res, rej) => {\n  const authedUser = question.author;\n  const formattedQuestion = formatQuestion(question);\n\n  setTimeout(() => {\n   questions = {\n    ...questions,\n    [formattedQuestion.id]: formattedQuestion,\n   };\n\n   users = {\n    ...users,\n    [authedUser]: {\n     ...users[authedUser],\n     questions: users[authedUser].questions.concat([formattedQuestion.id]),\n    },\n   };\n\n   res(formattedQuestion);\n  }, 1000);\n });\n}\n\nexport function _saveQuestionAnswer({ authedUser, qid, answer }) {\n return new Promise((res, rej) => {\n  setTimeout(() => {\n   users = {\n    ...users,\n    [authedUser]: {\n     ...users[authedUser],\n     answers: {\n      ...users[authedUser].answers,\n      [qid]: answer,\n     },\n    },\n   };\n\n   questions = {\n    ...questions,\n    [qid]: {\n     ...questions[qid],\n     [answer]: {\n      ...questions[qid][answer],\n      votes: questions[qid][answer].votes.concat([authedUser]),\n     },\n    },\n   };\n\n   res();\n  }, 500);\n });\n}\n","import {\n _saveQuestionAnswer,\n _saveQuestion,\n _getUsers,\n _getQuestions,\n} from \"./_DATA\";\n\nexport function getInitialData() {\n return Promise.all([_getUsers(), _getQuestions()]).then(\n  ([users, questions]) => ({\n   users,\n   questions,\n  })\n );\n}\n\nexport function saveQuestion(question) {\n return _saveQuestion(question);\n}\n\nexport function saveQuestionAnswer(object) {\n return _saveQuestionAnswer(object);\n}\n","import { saveQuestion } from \"../utils/api\";\nexport const RECEIVE_QUESTIONS = \"RECEIVE_QUESTIONS\";\nexport const REMOVE_QUESTION = \"REMOVE_QUESTION\";\nexport const ADD_QUESTION = \"ADD_QUESTION\";\nexport const ADD_QUESTION_ANSWER = \"ADD_QUESTION_ANSWER\";\nexport const REMOVE_QUESTION_ANSWER = \"REMOVE_QUESTION_ANSWER\";\n\nexport function receiveQuestions(questions) {\n return {\n  type: RECEIVE_QUESTIONS,\n  questions,\n };\n}\n\nexport function addQuestion(question) {\n return {\n  type: ADD_QUESTION,\n  question,\n };\n}\nexport function removeQuestion(question) {\n return {\n  type: REMOVE_QUESTION,\n  question,\n };\n}\n\nexport function addQuestionAnswer(qanswer) {\n return {\n  type: ADD_QUESTION_ANSWER,\n  qanswer,\n };\n}\nexport function removeQuestionAnswer(qanswer) {\n return {\n  type: REMOVE_QUESTION_ANSWER,\n  qanswer,\n };\n}\n\nexport function handleSaveQuestion(question) {\n return (dispatch, getState) => {\n  const { authedUser: author } = getState();\n  question = {\n   ...question,\n   author,\n  };\n  return saveQuestion(question)\n   .then((question) => {\n    dispatch(addQuestion(question));\n   })\n   .catch((e) => {\n    console.warn(\"There was an error\", e);\n    dispatch(removeQuestion(question));\n   });\n };\n}\n","export const RECEIVE_USERS  = 'RECEIVE_USERS'\nexport const REMOVE_USER  = 'REMOVE_USER'\nexport const ADD_USER  = 'ADD_USER'\nexport const SET_AUTHED_USER = 'SET_AUTHED_USER'\nexport const DELETE_AUTHED_USER = 'DELETE_AUTHED_USER'\nexport const  ADD_USER_QUESTION = 'ADD_USER_QUESTION'\nexport const REMOVE_USER_QUESTION = 'REMOVE_USER_QUESTION'\nexport const ADD_USER_ANSWER ='ADD_USER_ANSWER'\nexport const  REMOVE_USER_ANSWER = 'REMOVE_USER_ANSWER'\n\n\nexport function receiveUsers(users){\n  return {\n   type: RECEIVE_USERS,\n   users\n  }\n}\n\nexport function addUser(user){\n  return {\n   type: ADD_USER,\n   user\n  }\n}\nexport function removeUser(user){\n  return {\n   type:  REMOVE_USER,\n   user\n  }\n}\nexport function removeUserQuestion(user){\n  return {\n   type:  REMOVE_USER_QUESTION,\n   user\n  }\n}\nexport function removeUserAnswer(user){\n  return {\n   type:  REMOVE_USER_ANSWER,\n   user\n  }\n}\n\nexport function setAuthedUser(id){\n return {\n     type: SET_AUTHED_USER,\n     id\n }\n}\n\nexport function deleteAuthedUser(id){\n  return {\n    type: DELETE_AUTHED_USER,\n    id\n  }\n\n}\n\nexport function addUserAnswer(qanswer){\n  return {\n   type : ADD_USER_ANSWER,\n   qanswer\n  }\n}\n\nexport function addUserQuestion(user, questionId){\n return {\n   type: ADD_USER_QUESTION,\n     user,\n     questionId\n }\n\n}","import { combineReducers } from \"redux\";\nimport questions from \"./questions\";\nimport authedUser from \"./authedUser\";\nimport users from \"./users\";\n\n//combining the reducers into one and exporting\nexport default combineReducers({\n questions,\n users,\n authedUser,\n});\n","import {\n RECEIVE_QUESTIONS,\n ADD_QUESTION,\n REMOVE_QUESTION,\n REMOVE_QUESTION_ANSWER,\n ADD_QUESTION_ANSWER,\n} from \"../actions/questions\";\n\n//reducer for questions sstate management\nexport default function questions(state = {}, action) {\n switch (action.type) {\n  case RECEIVE_QUESTIONS:\n   return {\n    ...state,\n    ...action.questions,\n   };\n\n  case ADD_QUESTION:\n   return {\n    ...state,\n    [action.question.id]: {\n     ...state[action.question.id],\n     ...action.question,\n    },\n   };\n\n  case REMOVE_QUESTION:\n   return delete state[action.question.id];\n\n  case ADD_QUESTION_ANSWER:\n   return {\n    ...state,\n    [action.qanswer.qid]: {\n     ...state[action.qanswer.qid],\n     [action.qanswer.answer]: {\n      ...state[action.qanswer.qid][action.qanswer.answer],\n      votes: state[action.qanswer.qid][action.qanswer.answer].votes.concat([\n       action.qanswer.authedUser,\n      ]),\n     },\n    },\n   };\n\n  case REMOVE_QUESTION_ANSWER:\n   return {\n    ...state,\n    [action.qanswer.qid]: {\n     ...state[action.qanswer.qid],\n     [action.qanswer.answer]: {\n      ...state[action.qanswer.qid][action.qanswer.answer],\n      votes: state[action.qanswer.qid][action.qanswer.answer].votes.filter(\n       (user) => user !== action.qanswer.authedUser\n      ),\n     },\n    },\n   };\n\n  default:\n   return state;\n }\n}\n","import {\n RECEIVE_USERS,\n ADD_USER,\n ADD_USER_QUESTION,\n REMOVE_USER,\n REMOVE_USER_QUESTION,\n ADD_USER_ANSWER,\n REMOVE_USER_ANSWER,\n} from \"../actions/users\";\n\n//reducer for users state management\n\nexport default function users(state = {}, action) {\n switch (action.type) {\n  case RECEIVE_USERS:\n   return {\n    ...state,\n    ...action.users,\n   };\n\n  case ADD_USER:\n   return state.concat([action.user]);\n\n  case ADD_USER_QUESTION:\n   return {\n    ...state,\n    [action.user]: {\n     ...state[action.user],\n     questions: state[action.user].questions.concat([action.questionId]),\n    },\n   };\n\n  case ADD_USER_ANSWER:\n   return {\n    ...state,\n    [action.qanswer.authedUser]: {\n     ...state[action.qanswer.authedUser],\n     answers: {\n      ...state[action.qanswer.authedUser].answers,\n      [action.qanswer.qid]: action.qanswer.answer,\n     },\n    },\n   };\n\n  case REMOVE_USER:\n   return state.filter((user) => user !== action.user);\n\n  case REMOVE_USER_QUESTION:\n   return {\n    ...state,\n    [action.user]: {\n     ...state[action.user],\n     questions: state[action.user].questions.filter(\n      (questionId) => questionId !== action.questionId\n     ),\n    },\n   };\n  case REMOVE_USER_ANSWER:\n   return delete state[action.qanswer.authedUser].answers[action.qanswer.qid];\n\n  default:\n   return state;\n }\n}\n","import { SET_AUTHED_USER } from \"../actions/users\";\n//reducer for authedUser state management\nexport default function authedUser(state = null, action) {\n switch (action.type) {\n  case SET_AUTHED_USER:\n   return action.id;\n\n  default:\n   return state;\n }\n}\n","import {\n receiveUsers,\n addUserQuestion,\n addUserAnswer,\n removeUserAnswer,\n} from \"./users\";\nimport {\n receiveQuestions,\n addQuestion,\n removeQuestion,\n addQuestionAnswer,\n removeQuestionAnswer,\n} from \"./questions\";\n\nimport { getInitialData, saveQuestion, saveQuestionAnswer } from \"../utils/api\";\n\nexport function handleInitialData() {\n return (dispatch) => {\n  return getInitialData().then(({ users, questions }) => {\n   dispatch(receiveUsers(users));\n   dispatch(receiveQuestions(questions));\n  });\n };\n}\n\nexport function handleSaveQuestionUser(question) {\n return (dispatch, getState) => {\n  const { authedUser: author } = getState();\n  question = {\n   ...question,\n   author,\n  };\n\n  return saveQuestion(question)\n   .then((question) => {\n    dispatch(addQuestion(question));\n    dispatch(addUserQuestion(author, question.id));\n   })\n   .catch((e) => {\n    console.warn(\"There was an error\", e);\n    dispatch(removeQuestion(question));\n   });\n };\n}\n\nexport function handleSaveQuestionUserAnswer(questionAnswer) {\n return (dispatch, getState) => {\n  const { authedUser } = getState();\n  console.log(questionAnswer);\n  questionAnswer = {\n   ...questionAnswer,\n   authedUser,\n  };\n  dispatch(addQuestionAnswer(questionAnswer));\n  dispatch(addUserAnswer(questionAnswer));\n  return saveQuestionAnswer(questionAnswer).catch((e) => {\n   console.warn(\"There was an error\", e);\n   dispatch(removeQuestionAnswer(questionAnswer));\n   dispatch(removeUserAnswer(questionAnswer));\n  });\n };\n}\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { setAuthedUser } from \"../actions/users\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\nimport { Container } from \"react-bootstrap\";\n\nclass Login extends Component {\n handleSelectedUser = (e) => {\n  e.preventDefault();\n  const { value: user } = e.target.users;\n  //we want to prevent the user from selecting select user option cause there is no user in the db called that\n  if (user.toLowerCase() !== \"select user\") {\n   this.props.dispatch(setAuthedUser(user));\n  }\n };\n\n render() {\n  return (\n   <React.Fragment>\n    <Container>\n     <Jumbotron className=\"text__center\">\n      <div className=\"login__page\">\n       <h1>Welcome to Would You Rather App! </h1>\n       <div className=\"image__login App-logo success\">WYR</div>\n       <p> Please sign in to continue</p>\n\n       <Form onSubmit={this.handleSelectedUser}>\n        <Form.Control as=\"select\" name=\"users\">\n         <option value={null}> Select User</option>\n         {this.props.users.map((user) => (\n          <option key={user.id} value={user.id}>\n           {user.name}\n          </option>\n         ))}\n        </Form.Control>\n        <Button\n         variant=\"success\"\n         size=\"lg\"\n         block\n         className=\"button button__login\"\n         type=\"submit\">\n         Sign in\n        </Button>\n       </Form>\n      </div>\n     </Jumbotron>\n    </Container>\n   </React.Fragment>\n  );\n }\n}\n//getting the user information  id and name from the users state\nfunction mapStateToProps({ users }) {\n return {\n  users: Object.keys(users).map((user) => {\n   return {\n    id: users[user].id,\n    name: users[user].name,\n   };\n  }),\n };\n}\n\nexport default connect(mapStateToProps)(Login);\n","import React, { Component } from \"react\";\nimport { handleSaveQuestionUser } from \"../actions/shared\";\nimport Button from \"react-bootstrap/Button\";\nimport { Container, Card, Form, Jumbotron } from \"react-bootstrap\";\n\nclass NewQuestion extends Component {\n state = {\n  optionOne: \"\",\n  optionTwo: \"\",\n };\n\n isDisabled = () => {\n  const { optionOne, optionTwo } = this.state;\n  return optionOne === \"\" || optionTwo === \"\";\n };\n handleNewQuestion = (e) => {\n  e.preventDefault();\n  const { optionOne, optionTwo } = this.state;\n  const { dispatch, history } = this.props;\n  //constructing the question object\n  const question = {\n   optionOneText: optionOne,\n   optionTwoText: optionTwo,\n  };\n  //saving the authedUser question and then redirecting to homepage\n  dispatch(handleSaveQuestionUser(question));\n  history.push(\"/\");\n };\n handleInputChange = (e) => {\n  this.setState({\n   [e.target.name]: e.target.value,\n  });\n };\n render() {\n  const { optionOne, optionTwo } = this.state;\n  return (\n   <Container>\n    <Card>\n     <Jumbotron>\n      <div className=\"newQuestion__header\">\n       <h1>Create New Question</h1>\n      </div>\n     </Jumbotron>\n\n     <Form onSubmit={this.handleNewQuestion} className=\"question__form mb-3\">\n      <h2> Complete the question: </h2>\n      <h3>Would you rather ...</h3>\n      <Form.Control\n       type=\"text\"\n       placeholder=\"Enter Option One Text Here\"\n       name=\"optionOne\"\n       value={optionOne}\n       onChange={this.handleInputChange}\n      />\n      <div className=\"mb-3\">OR</div>\n      <Form.Control\n       type=\"text\"\n       placeholder=\"Enter Option Two Text Here\"\n       name=\"optionTwo\"\n       value={optionTwo}\n       onChange={this.handleInputChange}\n      />\n      <Button\n       type=\"submit\"\n       variant=\"success\"\n       size=\"lg\"\n       block\n       disabled={this.isDisabled()}>\n       Submit\n      </Button>\n     </Form>\n    </Card>\n   </Container>\n  );\n }\n}\n\nexport default NewQuestion;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Container, Jumbotron } from \"react-bootstrap\";\n\nclass LeaderBoard extends Component {\n render() {\n  const { users } = this.props;\n  return (\n   <Container>\n    <div className=\"leaderboard__header\">\n     <h1> Leaderboard </h1>\n    </div>\n    <ul>\n     <div className=\"question__card\">\n      <div className=\"question__author leaderboard card\">\n       {users\n        .sort((a, b) => b.total - a.total)\n        .map((user, i) => {\n         return (\n          <li key={user.id}>\n           <Jumbotron>\n            <h3>\n             {\" \"}\n             #{i + 1}: {user.name}\n            </h3>\n           </Jumbotron>\n           <div className=\"author__information\">\n            <div className=\"author__picture\">\n             <img\n              src={`%PUBLIC_URL%${user.avatar}`}\n              alt={`Avatar for ${user.name}`}\n              width={250}\n              height={250}\n             />\n            </div>\n            <div className=\"author__text\">\n             <div> Score : {user.total}</div>\n             <div> Answered Questions : {user.answeredQuestions}</div>\n             <div> Created Question : {user.createdQuestions}</div>\n            </div>\n           </div>\n          </li>\n         );\n        })}\n      </div>\n     </div>\n    </ul>\n   </Container>\n  );\n }\n}\n//constructing a users prop that contains the id, name, avatar, number of answered and unanswered\n//questions and a total for easier display\nfunction mapStateToProps({ users }) {\n return {\n  users: Object.keys(users).map((user) => {\n   const total =\n    Object.keys(users[user].answers).length + users[user].questions.length;\n   return {\n    id: users[user].id,\n    name: users[user].name,\n    avatar: users[user].avatarURL,\n    answeredQuestions: Object.keys(users[user].answers).length,\n    createdQuestions: users[user].questions.length,\n    total,\n   };\n  }),\n };\n}\nexport default connect(mapStateToProps)(LeaderBoard);\n","import React, { Component } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { setAuthedUser } from \"../actions/users\";\nimport {\n Container,\n Row,\n Col,\n Button,\n Navbar as Navigation,\n Nav,\n} from \"react-bootstrap\";\nclass NavBar extends Component {\n handleLogout = (e) => {\n  e.preventDefault();\n  //setting the user to null once logged out then redirecting to homepage\n  this.props.dispatch(setAuthedUser(null));\n  return this.props.history.push(\"/\");\n };\n render() {\n  const { user } = this.props;\n  return (\n   <Container>\n    <Row>\n     <Col>\n      <Navigation bg=\"dark\">\n       <Nav className=\"mr-auto  nav nav__left\">\n        <Link to=\"/\">Home</Link>\n        <Link to=\"/add\">New Question</Link>\n        <Link to=\"/leaderboard\">Leader Board</Link>\n       </Nav>\n       <Nav className=\" nav nav__right\">\n        {user && (\n         <React.Fragment>\n          <div className=\"user__name\"> Hello {user.name}</div>\n          <img\n           className=\"user__picture\"\n           src={`%PUBLIC_URL%${user.avatarURL}`}\n           alt={`${user.name}'s avatar`}\n           width={80}\n           height={80}\n          />\n          <Button variant=\"danger\" onClick={this.handleLogout}>\n           Logout\n          </Button>\n         </React.Fragment>\n        )}\n       </Nav>\n      </Navigation>\n     </Col>\n    </Row>\n   </Container>\n  );\n }\n}\n\nexport default withRouter(NavBar);\n","import React from \"react\";\nimport { Container, Jumbotron } from \"react-bootstrap\";\n//page not found object which displays page not found when route does not\n//exist\nfunction PageNotFound(props) {\n return (\n  <Container>\n   <Jumbotron className=\"notFound__page\">\n    <h1> Oops, Page not found</h1>\n   </Jumbotron>\n  </Container>\n );\n}\n\nexport default PageNotFound;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { handleSaveQuestionUserAnswer } from \"../actions/shared\";\nimport { Container, Form, Button, Jumbotron } from \"react-bootstrap\";\nimport PageNotFound from \"./PageNotFound\";\n\nclass QuestionPoll extends Component {\n handleOptionResult = (e) => {\n  e.preventDefault();\n  const { value } = e.target.options;\n  const { dispatch, question } = this.props;\n  const questionAnswer = {\n   qid: question.id,\n   answer: value,\n  };\n  // saves the user's answer to the store\n  dispatch(handleSaveQuestionUserAnswer(questionAnswer));\n };\n handlePercentageVote(option, total) {\n  return `${Math.floor((option * 100) / total)}%`;\n }\n render() {\n  const {\n   question,\n   userVote,\n   totalVotes,\n   optionOneVotes,\n   optionTwoVotes,\n   author,\n  } = this.props;\n  return (\n   <Container>\n    {!question ? (\n     <PageNotFound />\n    ) : (\n     <div>\n      <h1>Would You Rather </h1>\n\n      <Form onSubmit={this.handleOptionResult} className=\"card\">\n       <div key={question.id}>\n        <Jumbotron>\n         {!userVote ? (\n          <h2> {author.name} asks: </h2>\n         ) : (\n          <h2> Asked by {author.name}</h2>\n         )}\n        </Jumbotron>\n        <div className=\"question__card\">\n         <div className=\"question__author\">\n          <img\n           src={`%PUBLIC_URL%/${author.picture}`}\n           alt=\"Author\"\n           width={250}\n           height={250}\n          />\n         </div>\n\n         <div className=\"question__text\">\n          {!userVote ? (\n           <React.Fragment>\n            <div>\n             <Form.Check\n              type=\"radio\"\n              id=\"optionOne\"\n              value=\"optionOne\"\n              name=\"options\"\n              defaultChecked\n              label={question.optionOne.text}\n             />\n            </div>\n            <div> OR </div>\n            <div>\n             <Form.Check\n              type=\"radio\"\n              id=\"optionTwo\"\n              value=\"optionTwo\"\n              name=\"options\"\n              label={question.optionTwo.text}\n             />\n            </div>\n            <Button variant=\"success\" type=\"submit\">\n             Submit\n            </Button>\n           </React.Fragment>\n          ) : (\n           <React.Fragment>\n            <div\n             className={`votes ${userVote === \"optionOne\" && \"voted__for\"}`}>\n             <div>\n              {userVote === \"optionOne\" && \"You voted for :\"}{\" \"}\n              {question.optionOne.text}{\" \"}\n             </div>\n             <div className=\"percentage\">\n              <div\n               className=\"percentage__vote\"\n               style={{\n                width: `${this.handlePercentageVote(\n                 optionOneVotes,\n                 totalVotes\n                )}`,\n               }}>\n               <div>\n                {\" \"}\n                {this.handlePercentageVote(optionOneVotes, totalVotes)}{\" \"}\n               </div>\n              </div>\n             </div>\n             <div>\n              {optionOneVotes} of {totalVotes} votes\n             </div>\n            </div>\n            <div\n             className={`votes ${userVote === \"optionTwo\" && \"voted__for\"}`}>\n             <div>\n              {\" \"}\n              {userVote === \"optionTwo\" && \"You voted for :\"}{\" \"}\n              {question.optionTwo.text}{\" \"}\n             </div>\n             <div className=\"percentage\">\n              <div\n               className=\"percentage__vote\"\n               style={{\n                width: `${this.handlePercentageVote(\n                 optionTwoVotes,\n                 totalVotes\n                )}`,\n               }}>\n               <div>\n                {\" \"}\n                {this.handlePercentageVote(optionTwoVotes, totalVotes)}{\" \"}\n               </div>\n              </div>\n             </div>\n             <div>\n              {optionTwoVotes} of {totalVotes} votes\n             </div>\n            </div>\n           </React.Fragment>\n          )}\n         </div>\n        </div>\n       </div>\n      </Form>\n     </div>\n    )}\n   </Container>\n  );\n }\n}\n\n//building a prop based on the id from the url from the route and getting question information\n// such as the question , number of votes of each option and the user informaiton on who asked the question\nfunction mapStateToProps({ questions, users, authedUser }, { match }) {\n const questionId = match.params.question_id;\n const optionOneVotes = questions[questionId]\n  ? Object.keys(questions[questionId].optionOne.votes).length\n  : 0;\n const optionTwoVotes = questions[questionId]\n  ? Object.keys(questions[questionId].optionTwo.votes).length\n  : 0;\n const totalVotes = questions[questionId]\n  ? Object.keys(questions[questionId].optionOne.votes).length +\n    Object.keys(questions[questionId].optionTwo.votes).length\n  : 0;\n return {\n  question: questions[questionId],\n  userVote: users[authedUser].answers[questionId],\n  totalVotes,\n  optionOneVotes,\n  optionTwoVotes,\n  author: {\n   picture: questions[questionId]\n    ? users[questions[questionId].author].avatarURL\n    : null,\n   name: questions[questionId]\n    ? users[questions[questionId].author].name\n    : null,\n  },\n  users,\n };\n}\nexport default connect(mapStateToProps)(QuestionPoll);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { Button, Container, Jumbotron } from \"react-bootstrap\";\n\nclass QuestionPollList extends Component {\n state = {\n  isAnswered: false,\n };\n //sorting question based on the time they were created, with the lastest time shown first\n handleSortedQuestions = (question) =>\n  question.sort((a, b) => b.timestamp - a.timestamp);\n handleClick = (e) => {\n  e.preventDefault();\n  const { name } = e.target;\n  //we want to check if a question has been answered or not and then update the state\n  name === \"answered\"\n   ? this.setState({ isAnswered: true })\n   : this.setState({ isAnswered: false });\n };\n // building the question html depending on parameters passed\n buildQuestion = (aFunc) =>\n  aFunc.map((question) => {\n   const author = this.props.authors.filter(\n    (author) => author.id === question.author\n   );\n\n   return (\n    <div key={question.id} className=\"card\">\n     <Jumbotron>\n      {this.state.isAnswered ? (\n       <h2> Asked by {author[0].name} </h2>\n      ) : (\n       <h2> {author[0].name} asks: </h2>\n      )}\n     </Jumbotron>\n     <div className=\"question__card\">\n      <div className=\"question__author\">\n       <img\n        src={`%PUBLIC_URL%${author[0].avatarURL}`}\n        alt=\"Author\"\n        width={250}\n        height={250}\n       />\n      </div>\n      <div className=\"question__text\">\n       <h3> Would You rather </h3>\n       <div> ...{question.optionOne.text}... </div>\n       <Link to={`/questions/${question.id}`} className=\"btn btn-success\">\n        View Poll\n       </Link>\n      </div>\n     </div>\n    </div>\n   );\n  });\n\n render() {\n  const { unAnsweredQuestions, answeredQuestions } = this.props;\n  const { isAnswered } = this.state;\n\n  const questionNotAnswered = this.handleSortedQuestions(unAnsweredQuestions);\n  const questionAnswered = this.handleSortedQuestions(answeredQuestions);\n\n  return (\n   <Container className=\"dashboard\">\n    <div>\n     <div className=\"buttons\">\n      <Button\n       className={!isAnswered && \"active text__color\"}\n       variant={!isAnswered ? \"success\" : \"secondary\"}\n       onClick={this.handleClick}\n       name=\"notanswered\">\n       UnAnswered Question\n      </Button>\n      <Button\n       className={isAnswered && \"active text__color\"}\n       variant={isAnswered ? \"success\" : \"secondary\"}\n       onClick={this.handleClick}\n       name=\"answered\">\n       Answered Question\n      </Button>\n     </div>\n\n     {isAnswered\n      ? this.buildQuestion(questionAnswered)\n      : this.buildQuestion(questionNotAnswered)}\n    </div>\n   </Container>\n  );\n }\n}\n//props to get the list of questions sorted by answered and unanswered\n//getting the author of those questions\nfunction mapStateToProps({ users, authedUser, questions }) {\n const ArrQuestion = Object.keys(questions);\n const answers = Object.keys(users[authedUser].answers);\n const unAnsweredQuestions = ArrQuestion.filter(\n  (question) => !answers.includes(question)\n );\n const answeredQuestions = ArrQuestion.filter((question) =>\n  answers.includes(question)\n );\n const authors = [\n  ...new Set(ArrQuestion.map((question) => users[questions[question].author])),\n ];\n\n return {\n  unAnsweredQuestions: unAnsweredQuestions.map(\n   (question) => questions[question]\n  ),\n  answeredQuestions: answeredQuestions.map((question) => questions[question]),\n  authors,\n };\n}\nexport default connect(mapStateToProps)(QuestionPollList);\n","import React, { Component } from \"react\";\nimport { handleInitialData } from \"../actions/shared\";\nimport { connect } from \"react-redux\";\nimport Login from \"./Login\";\nimport { Route, Switch } from \"react-router\";\nimport NewQuestion from \"./NewQuestion\";\nimport LeaderBoard from \"./LeaderBoard\";\nimport NavBar from \"./NavBar\";\nimport QuestionPoll from \"./QuestionPoll\";\nimport QuestionPollList from \"./QuestionPollList\";\nimport PageNotFound from \"./PageNotFound\";\nimport Container from \"react-bootstrap/Container\";\n\nclass App extends Component {\n componentDidMount() {\n  this.props.dispatch(handleInitialData());\n }\n //building routes, the navbar to show everywhere so not in the switch statement\n //if not logged in then go to the login page, if logged in then display the appropriate component depending\n //on the route\n render() {\n  const { authedUser, users, dispatch } = this.props;\n  return (\n   <Container fluid=\"md\">\n    <NavBar user={authedUser} dispatch={dispatch} users={users} />\n    <Switch>\n     <Route exact path=\"/\" component={authedUser ? QuestionPollList : Login} />\n     <Route\n      exact\n      path=\"/add\"\n      render={({ history }) =>\n       authedUser ? (\n        <NewQuestion dispatch={dispatch} history={history} />\n       ) : (\n        <Login dispatch={dispatch} history={history} />\n       )\n      }\n     />\n     <Route\n      exact\n      path=\"/leaderboard\"\n      component={authedUser ? LeaderBoard : Login}\n     />\n     <Route\n      path=\"/questions/:question_id\"\n      component={authedUser ? QuestionPoll : Login}\n     />\n     <Route path=\"*\" component={!authedUser ? Login : PageNotFound} />\n    </Switch>\n   </Container>\n  );\n }\n}\n//getting the user information that is logged in\nfunction mapStateToProps({ users, authedUser }) {\n return {\n  authedUser: users[authedUser],\n };\n}\nexport default connect(mapStateToProps)(App);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\nimport applyMiddleWare from \"./middleware\";\nimport reducers from \"./reducers\";\nimport App from \"./component/App\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./css/App.css\";\nconst store = createStore(reducers, applyMiddleWare);\n\nReactDOM.render(\n <BrowserRouter basename={process.env.PUBLIC_URL}>\n  <Provider store={store}>\n   <App />\n  </Provider>\n </BrowserRouter>,\n document.getElementById(\"root\")\n);\n"],"sourceRoot":""}